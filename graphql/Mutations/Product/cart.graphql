input AddToCartInput {
    product_id: Int! @rules(apply: ["required","exists:products,id"])
    device_id: String! @rules(apply: ["required"])
    size_id: Int @rules(apply: ["sometimes","required"])
    color_id: Int @rules(apply: ["sometimes","required"])
    quantity: Int! @rules(apply: ["required","min:1","numeric"])
}

input DecreaseItemFromCartInput {
    cart_id: Int! @rules(apply: ["required","exists:carts,id"])
    device_id: String! @rules(apply: ["required"])
}

input EmptyCartInput {
    device_id: String! @rules(apply: ["required"])
}

input IncreaseCartInput {
    cart_id: Int! @rules(apply: ["required","exists:carts,id"])
    device_id: String! @rules(apply: ["required"])
}


extend type Mutation {
    addToCart(input: AddToCartInput @spread): Result
        @guard
        @localization
        @field(
            resolver: "App\\GraphQL\\Mutations\\Product\\CartMutation@addToCart"
        )

    decreaseItemFromCart(input: DecreaseItemFromCartInput @spread): Result
        @guard
        @localization
        @field(
            resolver: "App\\GraphQL\\Mutations\\Product\\CartMutation@decreaseItemFromCart"
        )

    emptyCart(input: EmptyCartInput @spread): Result
        @guard
        @field(
            resolver: "App\\GraphQL\\Mutations\\Product\\CartMutation@emptyCart"
        )

    increaseQuantityCart(input: IncreaseCartInput! @spread): Result
        @guard
        @field(
            resolver: "App\\GraphQL\\Mutations\\Product\\CartMutation@increaseQuantityCart"
        )
}
