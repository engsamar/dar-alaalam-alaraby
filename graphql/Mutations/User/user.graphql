input LoginInput @validator {
    mobile: String!
    password: String!
}

input ChangeLanguageInput {
    lang: String! @rules(apply: ["required"])
}

input RegisterInput @validator {
    name: String!
    email: String!
    mobile: String!
    password: String!
    password_confirmation: String!
}

input UpdateProfileInput @validator {
    name: String!
    email: String!
    mobile: String!
    gender: String
    image: String
    birth_date: String
}

input UpdateFCMTokenInput {
    fcm_token: String! @rules(apply: ["required"])
    device_id: String! @rules(apply: ["required"])
    version: String! @rules(apply: ["required"])
    platform: String! @rules(apply: ["required"])
}

extend type Mutation  {
    register(input: RegisterInput @spread): Result
        @localization
        @field(resolver: "App\\GraphQL\\Mutations\\User\\AuthMutation@register")

    login(input: LoginInput @spread): AccessToken!
        @localization
        @field(resolver: "App\\GraphQL\\Mutations\\User\\AuthMutation@login")


}
extend type Mutation @guard {

    updateProfile(input: UpdateProfileInput @spread ): Result
        @localization
        @field(
            resolver: "App\\GraphQL\\Mutations\\User\\AuthMutation@updateProfile"
        )

    changeLanguage(input: ChangeLanguageInput @spread): Result
        @localization
        @field(
            resolver: "App\\GraphQL\\Mutations\\User\\AuthMutation@changeLanguage"
        )

    updateFCMToken(input: UpdateFCMTokenInput! @spread): Result
        @field(
            resolver: "App\\GraphQL\\Mutations\\User\\AuthMutation@updateFcmToken"
        )
}
